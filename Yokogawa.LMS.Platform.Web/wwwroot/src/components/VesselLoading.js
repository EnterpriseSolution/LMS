/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var VesselLoading;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/VesselLoadingApp.js":
/*!*********************************!*\
  !*** ./src/VesselLoadingApp.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VesselLoading\": () => (/* binding */ VesselLoading)\n/* harmony export */ });\n/* harmony import */ var _services_VesselLoadingOrder_Service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/VesselLoadingOrder/Service */ \"./src/services/VesselLoadingOrder/Service.js\");\n/* harmony import */ var _viewmodels_VesselLoadingOrder_VesselLoadingOrderViewModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./viewmodels/VesselLoadingOrder/VesselLoadingOrderViewModel */ \"./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderViewModel.js\");\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global */ \"./src/global.js\");\nï»¿\r\n\r\n\r\n\r\nclass VesselLoading {\r\n    constructor(config) {\r\n        /*widget configuration defined in platform\r\n         * { \r\n         *   viewModelName - viewmodel namespace defined in platform\r\n         *   profile  - login user profile\r\n         *   serviceUrl - widget REST API service Url\r\n         *   pathname  - application pathname for react project navigation\r\n         * }\r\n         */\r\n        (0,_global__WEBPACK_IMPORTED_MODULE_2__.importAppConfig)(config);\r\n    }\r\n    exportViewModel() {\r\n        return _viewmodels_VesselLoadingOrder_VesselLoadingOrderViewModel__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n    }\r\n    exportServices() {\r\n        return _services_VesselLoadingOrder_Service__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n    }\r\n    setCore(core) {\r\n        (0,_global__WEBPACK_IMPORTED_MODULE_2__.importTangramCore)(core)\r\n    }\r\n}\n\n//# sourceURL=webpack://%5Bname%5D/./src/VesselLoadingApp.js?");

/***/ }),

/***/ "./src/common/CommonGridEditor.js":
/*!****************************************!*\
  !*** ./src/common/CommonGridEditor.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CommonGridEditors\": () => (/* binding */ CommonGridEditors)\n/* harmony export */ });\nlet CommonGridEditors = {};\r\n\r\nCommonGridEditors.CustomerEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoComboBox({\r\n            filter: \"contains\",\r\n            autoBind: false,\r\n            dataTextField: \"Name\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: function (options) {\r\n                        //ajax call\r\n                        var service = new MasterDataService(TLSVP.ServiceDomain);\r\n                        service.getCustomerList(function (result) {\r\n                            options.success(result);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.ProductEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoComboBox({\r\n            filter: \"contains\",\r\n            autoBind: false,\r\n            dataTextField: \"ProductName\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: function (options) {\r\n                        //ajax call\r\n                        var service = new MasterDataService(TLSVP.ServiceDomain);\r\n                        service.getProudctList(function (result) {\r\n                            options.success(result);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.UOMEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"' + ' validationmessage=\"Uom is required.\" ' + '/>')\r\n        .appendTo(container)\r\n        .kendoComboBox({\r\n            filter: \"contains\",\r\n            autoBind: false,\r\n            dataTextField: \"Name\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //ajax call\r\n                        var result = VesselOrder.Model.UomList;\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.OrderTypeEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Name\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        var result = [\r\n                            { Id: 1, Name: 'Loading' },\r\n                            { Id: 2, Name: 'Discharge' }\r\n                        ];\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order TANK List => Grid => Target dropdown selection\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.TankTargetTypeEditor = function (container, options) {\r\n\r\n    var orderType = parseFloatValue(options.model.OrderType);\r\n    var loadingTargets = utils.cloneModel(options.model.ListEnumLoadingTankTargetTypes);\r\n    var dischargeTargets = utils.cloneModel(options.model.ListEnumDischargeTankTargetTypes);\r\n\r\n    $('<input required name=\"Target\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Description\",\r\n            dataValueField: \"Code\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //var result = [\r\n                        //   { Code: 1, Description: 'Loading' },\r\n                        //   { Code: 2, Description: 'Discharge' }\r\n                        //];\r\n                        //options.success(result);\r\n\r\n                        var result = [];\r\n                        if (orderType === 1) {\r\n                            result = [];\r\n                            //loading TANK target LIST\r\n                            $.each(loadingTargets, function (index, item) {\r\n                                result.push(item);\r\n                            });\r\n                        } else if (orderType === 2) {\r\n                            result = [];\r\n                            // discharge TANK target List\r\n                            $.each(dischargeTargets, function (index, item) {\r\n                                result.push(item);\r\n                            });\r\n                        }\r\n\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            },\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n                var seltText = item.text();\r\n\r\n                options.model.Target = seltValue;\r\n                options.model.TargetName = seltText;\r\n                options.model.TargetDisplayName = seltText;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order TANK List => Grid => Norminate input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.TankNorminateEditor = function (container, options) {\r\n    var tankUOM = parseFloatValue(options.model.UOM);\r\n\r\n    if (tankUOM === 7) {\r\n        $('<input maxlength=\"14\" required name=\"Norminate\" data-bind=\"value:Norminate\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.Norminate = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    } else {\r\n        $('<input maxlength=\"14\" required name=\"Norminate\" data-bind=\"value:Norminate\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.Norminate = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * only for Customer Order => BOL Instruction Cutting Plan TANK List => Grid => Target dropdown selection\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankTargetTypeEditor = function (container, options) {\r\n\r\n    var listTargets = utils.cloneModel(options.model.ListEnumTargets);\r\n\r\n    $('<input required name=\"Target\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Description\",\r\n            dataValueField: \"Code\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //var result = [\r\n                        //   { Code: 1, Description: 'Loading' },\r\n                        //   { Code: 2, Description: 'Discharge' }\r\n                        //];\r\n                        //options.success(result);\r\n\r\n                        var result = [];\r\n                        result = [];\r\n                        //loading TANK target LIST\r\n                        $.each(listTargets, function (index, item) {\r\n                            result.push(item);\r\n                        });\r\n\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            },\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n                var seltText = item.text();\r\n\r\n                options.model.Target = seltValue;\r\n                options.model.TargetName = seltText;\r\n                options.model.TargetDisplayName = seltText;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n\r\n/**\r\n * only for Customer Order  => BOL Instruction Cutting Plan TANK List => Grid => Norminate input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankNorminateEditor = function (container, options) {\r\n    var tankUOM = parseFloatValue(options.model.UOM);\r\n\r\n    if (tankUOM === 7) {\r\n        $('<input maxlength=\"14\" required name=\"TargetQTY\" data-bind=\"value:QtyTarget\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyTarget = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    } else {\r\n        $('<input maxlength=\"14\" required name=\"TargetQTY\" data-bind=\"value:QtyTarget\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyTarget = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * only for Customer Order  => BOL Instruction Cutting Plan TANK List => Grid => Actual Qty input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankActualEditor = function (container, options) {\r\n    var tankUOM = parseFloatValue(options.model.UOM);\r\n\r\n    if (tankUOM === 7) {\r\n        $('<input maxlength=\"14\" required name=\"ActualQTY\" data-bind=\"value:QtyActual\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyActual = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    } else {\r\n        $('<input maxlength=\"14\" required name=\"ActualQTY\" data-bind=\"value:QtyActual\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyActual = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * only for Customer Order => BOL Instruction Cutting Plan TANK List => Grid => Is Blending dropdown selection\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankIsBlendingEditor = function (container, options) {\r\n\r\n    var listBlendings = utils.cloneModel(options.model.ListEnumIsBlendings);\r\n\r\n    $('<input required name=\"IsBlending\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Description\",\r\n            dataValueField: \"Code\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //var result = [\r\n                        //   { Code: 1, Description: 'Loading' },\r\n                        //   { Code: 2, Description: 'Discharge' }\r\n                        //];\r\n                        //options.success(result);\r\n\r\n                        var result = [];\r\n                        result = [];\r\n                        //loading TANK target LIST\r\n                        $.each(listBlendings, function (index, item) {\r\n                            result.push(item);\r\n                        });\r\n\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            },\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n                var seltText = item.text();\r\n\r\n                options.model.BlendingFlag = seltValue;\r\n                options.model.BlendingFlagName = seltText;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => Qty GSV input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderQtyGSVEditor = function (container, options) {\r\n    // only for Sub Operations -> QTY GSV input value checker\r\n    $('<input maxlength=\"14\"  name=\"ActualQTY\" data-bind=\"value:ActualQTY\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n        .appendTo(container)\r\n        .kendoTextBox({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                options.model.ActualQTY = seltValue;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => Qty MT input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderQtyMTEditor = function (container, options) {\r\n    // only for Sub Operations -> QTY MT input value checker\r\n    $('<input maxlength=\"14\"  name=\"ActualMT\" data-bind=\"value:ActualMT\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n        .appendTo(container)\r\n        .kendoTextBox({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                options.model.ActualMT = seltValue;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => Start Time input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderStartTimeEditor = function (container, options) {\r\n    // only for Sub Operations -> Start Time input value checker\r\n    $('<input maxlength=\"24\"  data-interval=\"15\" data-type=\"date\" data-bind=\"value:StartTimeString\">')\r\n        .appendTo(container)\r\n        .kendoDateTimePicker({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                //var format = \"yyyy-MM-ddTHH:mm:ssZ\";\r\n                //options.model.StartTimeString = kendo.parseDate(seltValue, format);\r\n\r\n                var seltValueString = utils.toDateString(seltValue, \"dd MMM yyyy, HH:mm:ss\");\r\n                options.model.StartTimeString = seltValueString;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => End Time input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderEndTimeEditor = function (container, options) {\r\n    // only for Sub Operations -> End Time input value checker\r\n    $('<input maxlength=\"24\"  data-interval=\"15\" data-type=\"date\" data-bind=\"value:FinishTimeString\">')\r\n        .appendTo(container)\r\n        .kendoDateTimePicker({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                //var format = \"yyyy-MM-ddTHH:mm:ssZ\";\r\n                //options.model.FinishTimeString = kendo.parseDate(seltValue, format);\r\n\r\n                var seltValueString = utils.toDateString(seltValue, \"dd MMM yyyy, HH:mm:ss\");\r\n                options.model.FinishTimeString = seltValueString;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.Decimal3Editor = function (container, options) {\r\n    $('<input name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoNumericTextBox({\r\n            format: \"{0:n3}\",\r\n            decimals: 3,\r\n            step: 0.001\r\n        });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/common/CommonGridEditor.js?");

/***/ }),

/***/ "./src/global.js":
/*!***********************!*\
  !*** ./src/global.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"importAppConfig\": () => (/* binding */ importAppConfig),\n/* harmony export */   \"importTangramCore\": () => (/* binding */ importTangramCore),\n/* harmony export */   \"eworkspace\": () => (/* binding */ eworkspace),\n/* harmony export */   \"AppConfig\": () => (/* binding */ AppConfig),\n/* harmony export */   \"reactPage\": () => (/* binding */ reactPage),\n/* harmony export */   \"navigationPage\": () => (/* binding */ navigationPage),\n/* harmony export */   \"utils\": () => (/* binding */ utils)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nlet eworkspace = null;\r\nlet navigationPage = null;\r\nlet reactPage = null;\r\nlet AppConfig = null;\r\nlet utils = null;\r\n\r\nfunction importTangramCore(obj){\r\n    eworkspace = obj;    \r\n    const basepage = eworkspace.components.ReactPage;\r\n    reactPage = basepage.extend({\r\n        _createReactElement: function () {\r\n            this._super();\r\n            var containerElm = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#' + this.Id);\r\n            if (this.component != null)\r\n                ReactDOM.render(this.component, containerElm[0]);\r\n            else {\r\n                console.error('Fails to load react component');\r\n            }\r\n\r\n        },\r\n        destroy: function () {\r\n            const elm = this.getPageDom();\r\n            if (elm.length == 0)\r\n                return;\r\n            ReactDOM.unmountComponentAtNode(elm[0]);\r\n            this._super();\r\n        },\r\n        setDataByField: function (fieldName, value) {\r\n            if (this.model.data == null) {\r\n                console.warn('model data is null');\r\n                return;\r\n            }\r\n\r\n            this.model.data[fieldName] = value;\r\n            if (this.component != null && this.component.setState != null)\r\n                this.component.setState(this.model.data);\r\n        },\r\n        setData: function (data) {\r\n            this.model.data = data;\r\n            if (this.component != null && this.component.setState != null)\r\n                this.component.setState({ data: data });\r\n        },\r\n        getData: function () {\r\n            if (this.component != null && this.component.setState != null)\r\n                return this.component.state.data;\r\n            else\r\n                return this.model.data;\r\n        },\r\n        getDataByField: function (fieldName) {\r\n            if (this.component != null && this.component.setState != null)\r\n                return this.component.state.data[fieldName];\r\n            else\r\n                return this.model.data[fieldName];\r\n\r\n        }\r\n    });\r\n    navigationPage = reactPage.extend({\r\n        init: function (id, model, template, containerselector) {\r\n            this._super(id, model, template, containerselector);\r\n            this.type = 3;//navigation page\r\n        },\r\n        display: function (url) {\r\n            this.destroy();\r\n\r\n            if (url != null && url.length>0)\r\n              this.model.props.url = url;\r\n\r\n            var pagename = (this.pageurl == null ? this.Id : this.pageurl);\r\n            console.log('display page %c ' + pagename, 'color:blue')\r\n            this.Load();\r\n        },\r\n        replace: function () {\r\n            this.display();\r\n        }\r\n\r\n    })\r\n    utils = eworkspace.utils;\r\n}\r\n\r\nfunction importAppConfig(config) {\r\n    AppConfig = config;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/global.js?");

/***/ }),

/***/ "./src/services/VesselLoadingOrder/Service.js":
/*!****************************************************!*\
  !*** ./src/services/VesselLoadingOrder/Service.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./VesselLoadingOrderService */ \"./src/services/VesselLoadingOrder/VesselLoadingOrderService.js\");\nï»¿\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\r\n    return {\r\n        getVesselLoadingOrderList: _VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_0__.getVesselLoadingOrderList, getVesselLoadingOrderDetails: _VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_0__.getVesselLoadingOrderDetails, saveVesselLoadingOrder: _VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_0__.saveVesselLoadingOrder, deleteVesselLoadingOrder: _VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_0__.deleteVesselLoadingOrder\r\n    };\r\n};\n\n//# sourceURL=webpack://%5Bname%5D/./src/services/VesselLoadingOrder/Service.js?");

/***/ }),

/***/ "./src/services/VesselLoadingOrder/VesselLoadingOrderService.js":
/*!**********************************************************************!*\
  !*** ./src/services/VesselLoadingOrder/VesselLoadingOrderService.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVesselLoadingOrderList\": () => (/* binding */ getVesselLoadingOrderList),\n/* harmony export */   \"getVesselLoadingOrderDetails\": () => (/* binding */ getVesselLoadingOrderDetails),\n/* harmony export */   \"saveVesselLoadingOrder\": () => (/* binding */ saveVesselLoadingOrder),\n/* harmony export */   \"deleteVesselLoadingOrder\": () => (/* binding */ deleteVesselLoadingOrder)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\nï»¿\r\n\r\nfunction getVesselLoadingOrderList(options, callback, failCallback) {\r\n\r\n    options = options == null ? { criterias: [], CurrentPageIndex: 0, PageSize:10 } : options;\r\n    var parameter = {\r\n        Criterias: options.criterias == null ? [] : options.criterias,\r\n        CurrentPageIndex: options.page,\r\n        PageSize: options.pageSize\r\n    };\r\n\r\n    var apiOption = {\r\n        type: \"POST\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/VesselLoadingOrder/VesselLoadingOrders',\r\n        data: JSON.stringify(parameter),\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        global: false,\r\n        success: function (json) {\r\n            json.Items = json.Items.map(function (item) {\r\n                item.Eta = new Date(item.Eta);\r\n                return item;\r\n            });\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            if ($.isFunction(failCallback))\r\n                failCallback(xhr);\r\n        },\r\n\r\n        processData: false\r\n    };\r\n\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n}\r\n\r\nfunction getVesselLoadingOrderDetails(id, callback, failCallback) {\r\n    id = id == null || id.length == 0 ? _global__WEBPACK_IMPORTED_MODULE_0__.utils.getEmptyGUID() : id;\r\n    var apiOption = {\r\n        type: \"GET\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/VesselLoadingOrder/' + id,\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        success: function (json) {\r\n            json.UomList = MasteData.UomList.map(function (uom) {\r\n                return { text: uom.text, value: uom.value };\r\n            });\r\n            json.StatusList = VesselOrder.OrderStatus.map(function (status) {\r\n                return { text: status.text, value: status.value };\r\n            });\r\n            json.Eta = new Date(json.Eta);\r\n            getMasterDataList(json, callback, failCallback);\r\n          \r\n        },\r\n        error: function (xhr) {\r\n            if ($.isFunction(failCallback))\r\n                failCallback(xhr);\r\n        },\r\n        processData: false\r\n    };\r\n\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n}\r\n\r\nfunction getMasterDataList(data, callback, failCallback) {\r\n    var apiOption = {\r\n        type: \"GET\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/VesselLoadingOrder/GetMasterData',\r\n        dataType: 'json',\r\n        contentType: 'application/json' ,\r\n        global: false,\r\n        success: function (json) {\r\n            data.CustomerList = json.CustomerList;\r\n            data.ProductList = json.ProductList;\r\n            data.JettyList = json.JettyList;\r\n            data.VesselList = json.VesselList;\r\n\r\n            if ($.isFunction(callback))\r\n                callback(data);\r\n        },\r\n        error: function (xhr) {\r\n            if ($.isFunction(failCallback))\r\n                failCallback(xhr);\r\n        },\r\n\r\n        processData: false\r\n    };\r\n\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n}\r\n\r\nfunction deleteVesselLoadingOrder(id, callback, failCallback) {\r\n    var apiOption = {\r\n        type: \"DELETE\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/VesselLoadingOrder/' + id,\r\n        success: function (json) {\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            alert('Service Error(delete VesselLoadingOrder):' + xhr.responseText);\r\n            if ($.isFunction(failCallback))\r\n                failCallback();\r\n        },\r\n\r\n        processData: false\r\n    };\r\n\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n}\r\n\r\n\r\nfunction saveVesselLoadingOrder(VesselLoadingOrder, callback, failCallback) {\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(true);\r\n    var options = {\r\n        type: \"POST\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/VesselLoadingOrder/SaveVesselLoadingOrder',\r\n        data: JSON.stringify(VesselLoadingOrder),\r\n        success: function (json) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            alert('Service Error(save VesselLoadingOrder):' + xhr.responseText);\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n        },\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        processData: false\r\n    }\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(options);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/services/VesselLoadingOrder/VesselLoadingOrderService.js?");

/***/ }),

/***/ "./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderModels.js":
/*!***********************************************************************!*\
  !*** ./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderModels.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\nï»¿\r\nfunction getVesselLoadingOrderModel() {\r\n    return {\r\n        title: \"VesselLoadingOrder\",\r\n        buttons: [\r\n            { id: 'search', text: \"ADVANCE SEARCH\", name: \"fa-search\"  },\r\n            { id: 'new', text: \"NEW\", name: \"fa-plus\", page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName + '.VesselMainOrder', Id: \"VesselMainOrder\" }},\r\n            { id: 'edit', text: \"EDIT\", name: \"fa-pencil-alt\", page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName + '.VesselMainOrder', Id: \"VesselMainOrder\" } },\r\n            { id: 'delete', text: \"DELETE\", name: \"fa-trash\" },\r\n        ],\r\n        filters: [],\r\n        gridOptions: {\r\n            dataSource: {\r\n                data: [\r\n                ],\r\n                pageSize: 10,\r\n                serverPaging: true,\r\n                schema: {\r\n                    data: 'Items',\r\n                    total: 'RowCount'\r\n                }\r\n            },\r\n            height: 590,\r\n            selectable: true,\r\n            groupable: true,\r\n            filterable: false,\r\n            scrollable: true,\r\n            sortable: true,\r\n            pageable: true,\r\n            columns: [\r\n                { field: 'CustomerName', title: 'CustomerName' },\r\n                { field: 'Destination', title: 'Destination' },\r\n                { field: 'Eta', title: 'Eta', template: \"#=convertToDateString(Eta, 'dd MMM yyyy')#\" },\r\n                { field: 'JettyNo', title: 'JettyNo' },\r\n                { field: 'LoadedQty', title: 'LoadedQty' },\r\n                { field: 'OperationType', title: 'OperationType' },\r\n                { field: 'OrderNo', title: 'OrderNo' },\r\n                { field: 'OrderQty', title: 'OrderQty' },\r\n                { field: 'ProductName', title: 'ProductName' },\r\n                { field: 'Remarks', title: 'Remarks' },\r\n                { field: 'ShipmentNo', title: 'ShipmentNo' },\r\n                { field: 'SourceType', title: 'SourceType' },\r\n                { field: 'Status', title: 'Status' },\r\n                { field: 'UOM', title: 'UOM' },\r\n                { field: 'VesselName', title: 'VesselName' },\r\n\r\n\r\n              ]\r\n        }  ,\r\n        conditions: [\r\n            { field: 'JobNo', title: 'JobNo', type: 'text', dataType: 'string' }\r\n        ],\r\n        data: []\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction getMainLoadingOrder() {\r\n    return {\r\n\r\n        toolBarItems: [\r\n            { template: \"<button><span class='fa fa-plus'></span><span data-i18n='NEW'>NEW</span></button>\" },\r\n            { template: \"<button><span class='fa fa-save'></span><span data-i18n='SAVE'>SAVE</span></button>\" },\r\n            { template: \"<button><span class='fa fa-times'></span><span data-i18n='CLOSE'>CLOSE</span></button>\" },\r\n            { template: \"<button><span class='fa fa-trash'></span><span data-i18n='DELETE'>DELETE</span></button>\" }\r\n        ],\r\n        title: \"Order\",\r\n        headers: [{ title: \"Order\", field: \"OrderNo\" }],\r\n        data: null,\r\n        navigation: [\r\n            { id:\"OrderForm\", text: 'CreateOrder', page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName + '.VesselLoadingOrderForm', Id: \"VesselLoadingOrderForm\" } },\r\n          \r\n        ],\r\n        content: []\r\n\r\n    }\r\n}\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    getVesselLoadingOrderModel, getMainLoadingOrder\r\n});\n\n//# sourceURL=webpack://%5Bname%5D/./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderModels.js?");

/***/ }),

/***/ "./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderVM.js":
/*!*******************************************************************!*\
  !*** ./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderVM.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VesselLoadingOrderList\": () => (/* binding */ VesselLoadingOrderList),\n/* harmony export */   \"VesselLoadingOrderForm\": () => (/* binding */ VesselLoadingOrderForm),\n/* harmony export */   \"VesselMainOrder\": () => (/* binding */ VesselMainOrder)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\n/* harmony import */ var _services_VesselLoadingOrder_VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/VesselLoadingOrder/VesselLoadingOrderService */ \"./src/services/VesselLoadingOrder/VesselLoadingOrderService.js\");\n/* harmony import */ var _VesselLoadingOrderModels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./VesselLoadingOrderModels */ \"./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderModels.js\");\n/* harmony import */ var _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/CommonGridEditor */ \"./src/common/CommonGridEditor.js\");\nï»¿\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction VesselLoadingOrderList(id, selector) {\r\n    var model = _VesselLoadingOrderModels__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getVesselLoadingOrderModel();\r\n\r\n    var VesselLoadingOrderPage = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.ListPage(id, model, selector);\r\n    VesselLoadingOrderPage.setLoadDataHandler(_services_VesselLoadingOrder_VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_1__.getVesselLoadingOrderList);\r\n\r\n    //create\r\n    VesselLoadingOrderPage.onButtonClickById(\"new\", function (page) {\r\n        page.navigate(\"id=null\") ;\r\n    });\r\n\r\n    VesselLoadingOrderPage.onButtonClickById(\"edit\", function (page) {\r\n\r\n        var data = VesselLoadingOrderPage.getSelectedRow();\r\n\r\n        if (data != null) {\r\n            page.navigate(\"id=\" + data.Id);\r\n        }\r\n        else {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.warning('Please select a record');\r\n            VesselLoadingOrderPage.show();\r\n        }\r\n\r\n    });\r\n\r\n    VesselLoadingOrderPage.onButtonClickById(\"delete\", function (page) {\r\n        var data = VesselLoadingOrderPage.getSelectedRow();\r\n\r\n        if (data != null) {\r\n            var dialog = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.ConfirmationDialog();\r\n            dialog.show(\"Delete Record\", \"Are you sure to delete the record?\", function () {\r\n                _services_VesselLoadingOrder_VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_1__.deleteVesselLoadingOrder(data.Id, function () {\r\n                    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.info('Successfully delete the record!');\r\n                    VesselLoadingOrderPage.display();\r\n                })\r\n\r\n            })\r\n        }\r\n        else {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.warning('Please select a record');\r\n            VesselLoadingOrderPage.show();\r\n        }\r\n    });\r\n\r\n    return VesselLoadingOrderPage;\r\n}\r\n\r\nfunction VesselMainOrder(id, selector) {\r\n    var model = _VesselLoadingOrderModels__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getMainLoadingOrder();\r\n    var mainOrder = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.WorkflowPage(\"MainOrder\", model, selector);\r\n    mainOrder.setLoadDataHandler(_services_VesselLoadingOrder_VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_1__.getVesselLoadingOrderDetails);\r\n    //save\r\n    mainOrder.onToolBarItemClick(1, function () {\r\n        var OrderForm = mainOrder.getNavigationPageById('OrderForm');\r\n        OrderForm.save(mainOrder,function (data) {\r\n            _services_VesselLoadingOrder_VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_1__.saveVesselLoadingOrder(data, function () {\r\n                _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.info(\"Save the record!\");\r\n               \r\n                \r\n            })\r\n           \r\n           }\r\n        );\r\n      \r\n\r\n    });\r\n    //close\r\n    mainOrder.onToolBarItemClick(2, function () {\r\n        $(\".k-widget.k-upload\").find(\"ul\").remove();\r\n        mainOrder.parent.navigate();\r\n    });\r\n    //delete\r\n    mainOrder.onToolBarItemClick(3, function () {\r\n        var dialog = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.ConfirmationDialog();\r\n        dialog.show(\"Delete Record\", \"Are you sure to delete the record?\", function () {\r\n            var id = mainOrder.model.data.Id;\r\n            _services_VesselLoadingOrder_VesselLoadingOrderService__WEBPACK_IMPORTED_MODULE_1__.deleteVesselLoadingOrder(id, function () {\r\n                ui.info('Successfully delete the record!');\r\n                mainOrder.parent.display();\r\n            })\r\n        })\r\n\r\n    });\r\n    return mainOrder;\r\n}\r\n\r\nfunction VesselLoadingOrderForm(id, selector) {\r\n    var template = { Id: 'VesselLoadingOrderForm', url: \"src/view/VesselLoadingOrder.html\" }\r\n    var model = { data: null };\r\n    var form = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.Form(id, model, template, selector);\r\n    form.setLoadCompletedHandler(function (data) {\r\n    });\r\n    form.save = function (mainOrder,callback) {\r\n        if (form.validator.validate() == false) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.error('Please enter the required fields');\r\n            return;\r\n        }\r\n        var data = form.getData();\r\n\r\n        if ($.isFunction(callback))\r\n            callback(data);\r\n        $(\".k-widget.k-upload\").find(\"ul\").remove();\r\n        mainOrder.parent.navigate();\r\n    }\r\n    return form;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderVM.js?");

/***/ }),

/***/ "./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderViewModel.js":
/*!**************************************************************************!*\
  !*** ./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderViewModel.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _VesselLoadingOrderVM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./VesselLoadingOrderVM */ \"./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderVM.js\");\nï»¿\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\r\n    return {\r\n        VesselLoadingOrderList: _VesselLoadingOrderVM__WEBPACK_IMPORTED_MODULE_0__.VesselLoadingOrderList, VesselLoadingOrderForm: _VesselLoadingOrderVM__WEBPACK_IMPORTED_MODULE_0__.VesselLoadingOrderForm, VesselMainOrder: _VesselLoadingOrderVM__WEBPACK_IMPORTED_MODULE_0__.VesselMainOrder\r\n    }\r\n}\n\n//# sourceURL=webpack://%5Bname%5D/./src/viewmodels/VesselLoadingOrder/VesselLoadingOrderViewModel.js?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/VesselLoadingApp.js");
/******/ 	VesselLoading = __webpack_exports__;
/******/ 	
/******/ })()
;