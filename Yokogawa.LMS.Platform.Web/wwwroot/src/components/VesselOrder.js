/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var VesselOrder;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VesselOrder\": () => (/* binding */ VesselOrder)\n/* harmony export */ });\n/* harmony import */ var _services_VesselOperation_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/VesselOperation/services */ \"./src/services/VesselOperation/services.js\");\n/* harmony import */ var _viewmodels_VesselOperation_viewmodels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./viewmodels/VesselOperation/viewmodels */ \"./src/viewmodels/VesselOperation/viewmodels.js\");\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global */ \"./src/global.js\");\n\r\n\r\n\r\n\r\nclass VesselOrder {\r\n    constructor(config) {\r\n        /*widget configuration defined in platform\r\n         * { \r\n         *   viewModelName - viewmodel namespace defined in platform\r\n         *   profile  - login user profile\r\n         *   serviceUrl - widget REST API service Url\r\n         *   TemplateFileFolder - HTML template folder in platform\r\n         *   pathname  - application pathname for react project navigation\r\n         * }\r\n         */\r\n        (0,_global__WEBPACK_IMPORTED_MODULE_2__.importAppConfig)(config);\r\n    }\r\n    exportViewModel() {\r\n        return _viewmodels_VesselOperation_viewmodels__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n    }\r\n    exportServices() {\r\n        return _services_VesselOperation_services__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n    }\r\n    setCore(core) {\r\n        (0,_global__WEBPACK_IMPORTED_MODULE_2__.importTangramCore)(core)\r\n    }\r\n}\n\n//# sourceURL=webpack://%5Bname%5D/./src/app.js?");

/***/ }),

/***/ "./src/common/CommonGridEditor.js":
/*!****************************************!*\
  !*** ./src/common/CommonGridEditor.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CommonGridEditors\": () => (/* binding */ CommonGridEditors)\n/* harmony export */ });\nlet CommonGridEditors = {};\r\n\r\nCommonGridEditors.CustomerEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoComboBox({\r\n            filter: \"contains\",\r\n            autoBind: false,\r\n            dataTextField: \"Name\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: function (options) {\r\n                        //ajax call\r\n                        var service = new MasterDataService(TLSVP.ServiceDomain);\r\n                        service.getCustomerList(function (result) {\r\n                            options.success(result);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.ProductEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoComboBox({\r\n            filter: \"contains\",\r\n            autoBind: false,\r\n            dataTextField: \"ProductName\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: function (options) {\r\n                        //ajax call\r\n                        var service = new MasterDataService(TLSVP.ServiceDomain);\r\n                        service.getProudctList(function (result) {\r\n                            options.success(result);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.UOMEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"' + ' validationmessage=\"Uom is required.\" ' + '/>')\r\n        .appendTo(container)\r\n        .kendoComboBox({\r\n            filter: \"contains\",\r\n            autoBind: false,\r\n            dataTextField: \"Name\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //ajax call\r\n                        var result = VesselOrder.Model.UomList;\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.OrderTypeEditor = function (container, options) {\r\n    $('<input required name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Name\",\r\n            dataValueField: \"Id\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        var result = [\r\n                            { Id: 1, Name: 'Loading' },\r\n                            { Id: 2, Name: 'Discharge' }\r\n                        ];\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order TANK List => Grid => Target dropdown selection\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.TankTargetTypeEditor = function (container, options) {\r\n\r\n    var orderType = parseFloatValue(options.model.OrderType);\r\n    var loadingTargets = utils.cloneModel(options.model.ListEnumLoadingTankTargetTypes);\r\n    var dischargeTargets = utils.cloneModel(options.model.ListEnumDischargeTankTargetTypes);\r\n\r\n    $('<input required name=\"Target\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Description\",\r\n            dataValueField: \"Code\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //var result = [\r\n                        //   { Code: 1, Description: 'Loading' },\r\n                        //   { Code: 2, Description: 'Discharge' }\r\n                        //];\r\n                        //options.success(result);\r\n\r\n                        var result = [];\r\n                        if (orderType === 1) {\r\n                            result = [];\r\n                            //loading TANK target LIST\r\n                            $.each(loadingTargets, function (index, item) {\r\n                                result.push(item);\r\n                            });\r\n                        } else if (orderType === 2) {\r\n                            result = [];\r\n                            // discharge TANK target List\r\n                            $.each(dischargeTargets, function (index, item) {\r\n                                result.push(item);\r\n                            });\r\n                        }\r\n\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            },\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n                var seltText = item.text();\r\n\r\n                options.model.Target = seltValue;\r\n                options.model.TargetName = seltText;\r\n                options.model.TargetDisplayName = seltText;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order TANK List => Grid => Norminate input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.TankNorminateEditor = function (container, options) {\r\n    var tankUOM = parseFloatValue(options.model.UOM);\r\n\r\n    if (tankUOM === 7) {\r\n        $('<input maxlength=\"14\" required name=\"Norminate\" data-bind=\"value:Norminate\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.Norminate = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    } else {\r\n        $('<input maxlength=\"14\" required name=\"Norminate\" data-bind=\"value:Norminate\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.Norminate = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * only for Customer Order => BOL Instruction Cutting Plan TANK List => Grid => Target dropdown selection\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankTargetTypeEditor = function (container, options) {\r\n\r\n    var listTargets = utils.cloneModel(options.model.ListEnumTargets);\r\n\r\n    $('<input required name=\"Target\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Description\",\r\n            dataValueField: \"Code\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //var result = [\r\n                        //   { Code: 1, Description: 'Loading' },\r\n                        //   { Code: 2, Description: 'Discharge' }\r\n                        //];\r\n                        //options.success(result);\r\n\r\n                        var result = [];\r\n                        result = [];\r\n                        //loading TANK target LIST\r\n                        $.each(listTargets, function (index, item) {\r\n                            result.push(item);\r\n                        });\r\n\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            },\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n                var seltText = item.text();\r\n\r\n                options.model.Target = seltValue;\r\n                options.model.TargetName = seltText;\r\n                options.model.TargetDisplayName = seltText;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n\r\n/**\r\n * only for Customer Order  => BOL Instruction Cutting Plan TANK List => Grid => Norminate input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankNorminateEditor = function (container, options) {\r\n    var tankUOM = parseFloatValue(options.model.UOM);\r\n\r\n    if (tankUOM === 7) {\r\n        $('<input maxlength=\"14\" required name=\"TargetQTY\" data-bind=\"value:QtyTarget\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyTarget = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    } else {\r\n        $('<input maxlength=\"14\" required name=\"TargetQTY\" data-bind=\"value:QtyTarget\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyTarget = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * only for Customer Order  => BOL Instruction Cutting Plan TANK List => Grid => Actual Qty input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankActualEditor = function (container, options) {\r\n    var tankUOM = parseFloatValue(options.model.UOM);\r\n\r\n    if (tankUOM === 7) {\r\n        $('<input maxlength=\"14\" required name=\"ActualQTY\" data-bind=\"value:QtyActual\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyActual = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    } else {\r\n        $('<input maxlength=\"14\" required name=\"ActualQTY\" data-bind=\"value:QtyActual\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n            .appendTo(container)\r\n            .kendoTextBox({\r\n                change: function (e) {\r\n                    var item = e.sender;\r\n                    var seltValue = item.value();\r\n\r\n                    options.model.QtyActual = seltValue;\r\n                    // Use the value of the widget\r\n                }\r\n            });\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * only for Customer Order => BOL Instruction Cutting Plan TANK List => Grid => Is Blending dropdown selection\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.BillTankIsBlendingEditor = function (container, options) {\r\n\r\n    var listBlendings = utils.cloneModel(options.model.ListEnumIsBlendings);\r\n\r\n    $('<input required name=\"IsBlending\"/>')\r\n        .appendTo(container)\r\n        .kendoDropDownList({\r\n            autoBind: false,\r\n            dataTextField: \"Description\",\r\n            dataValueField: \"Code\",\r\n            dataSource: {\r\n                type: \"json\",\r\n                transport: {\r\n                    read: function (options) {\r\n                        //var result = [\r\n                        //   { Code: 1, Description: 'Loading' },\r\n                        //   { Code: 2, Description: 'Discharge' }\r\n                        //];\r\n                        //options.success(result);\r\n\r\n                        var result = [];\r\n                        result = [];\r\n                        //loading TANK target LIST\r\n                        $.each(listBlendings, function (index, item) {\r\n                            result.push(item);\r\n                        });\r\n\r\n                        options.success(result);\r\n                    }\r\n                }\r\n            },\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n                var seltText = item.text();\r\n\r\n                options.model.BlendingFlag = seltValue;\r\n                options.model.BlendingFlagName = seltText;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => Qty GSV input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderQtyGSVEditor = function (container, options) {\r\n    // only for Sub Operations -> QTY GSV input value checker\r\n    $('<input maxlength=\"14\"  name=\"ActualQTY\" data-bind=\"value:ActualQTY\" oninput=\"NumKey_BigWeight(this,3)\">')\r\n        .appendTo(container)\r\n        .kendoTextBox({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                options.model.ActualQTY = seltValue;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => Qty MT input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderQtyMTEditor = function (container, options) {\r\n    // only for Sub Operations -> QTY MT input value checker\r\n    $('<input maxlength=\"14\"  name=\"ActualMT\" data-bind=\"value:ActualMT\" oninput=\"NumKey_BigWeight(this,0)\">')\r\n        .appendTo(container)\r\n        .kendoTextBox({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                options.model.ActualMT = seltValue;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => Start Time input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderStartTimeEditor = function (container, options) {\r\n    // only for Sub Operations -> Start Time input value checker\r\n    $('<input maxlength=\"24\"  data-interval=\"15\" data-type=\"date\" data-bind=\"value:StartTimeString\">')\r\n        .appendTo(container)\r\n        .kendoDateTimePicker({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                //var format = \"yyyy-MM-ddTHH:mm:ssZ\";\r\n                //options.model.StartTimeString = kendo.parseDate(seltValue, format);\r\n\r\n                var seltValueString = utils.toDateString(seltValue, \"dd MMM yyyy, HH:mm:ss\");\r\n                options.model.StartTimeString = seltValueString;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * only for Customer Order  => Sub Operations List => Grid => End Time input value validator checker\r\n * @param {} container \r\n * @param {} options \r\n * @returns {} \r\n */\r\nCommonGridEditors.SubOrderEndTimeEditor = function (container, options) {\r\n    // only for Sub Operations -> End Time input value checker\r\n    $('<input maxlength=\"24\"  data-interval=\"15\" data-type=\"date\" data-bind=\"value:FinishTimeString\">')\r\n        .appendTo(container)\r\n        .kendoDateTimePicker({\r\n            change: function (e) {\r\n                var item = e.sender;\r\n                var seltValue = item.value();\r\n\r\n                //var format = \"yyyy-MM-ddTHH:mm:ssZ\";\r\n                //options.model.FinishTimeString = kendo.parseDate(seltValue, format);\r\n\r\n                var seltValueString = utils.toDateString(seltValue, \"dd MMM yyyy, HH:mm:ss\");\r\n                options.model.FinishTimeString = seltValueString;\r\n                // Use the value of the widget\r\n            }\r\n        });\r\n};\r\n\r\nCommonGridEditors.Decimal3Editor = function (container, options) {\r\n    $('<input name=\"' + options.field + '\"/>')\r\n        .appendTo(container)\r\n        .kendoNumericTextBox({\r\n            format: \"{0:n3}\",\r\n            decimals: 3,\r\n            step: 0.001\r\n        });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/common/CommonGridEditor.js?");

/***/ }),

/***/ "./src/global.js":
/*!***********************!*\
  !*** ./src/global.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"importAppConfig\": () => (/* binding */ importAppConfig),\n/* harmony export */   \"importTangramCore\": () => (/* binding */ importTangramCore),\n/* harmony export */   \"eworkspace\": () => (/* binding */ eworkspace),\n/* harmony export */   \"AppConfig\": () => (/* binding */ AppConfig),\n/* harmony export */   \"reactPage\": () => (/* binding */ reactPage),\n/* harmony export */   \"navigationPage\": () => (/* binding */ navigationPage),\n/* harmony export */   \"utils\": () => (/* binding */ utils)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nlet eworkspace = null;\r\nlet navigationPage = null;\r\nlet reactPage = null;\r\nlet AppConfig = null;\r\nlet utils = null;\r\n\r\nfunction importTangramCore(obj){\r\n    eworkspace = obj;    \r\n    const basepage = eworkspace.components.ReactPage;\r\n    reactPage = basepage.extend({\r\n        _createReactElement: function () {\r\n            this._super();\r\n            var containerElm = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#' + this.Id);\r\n            if (this.component != null)\r\n                ReactDOM.render(this.component, containerElm[0]);\r\n            else {\r\n                console.error('Fails to load react component');\r\n            }\r\n\r\n        },\r\n        destroy: function () {\r\n            const elm = this.getPageDom();\r\n            if (elm.length == 0)\r\n                return;\r\n            ReactDOM.unmountComponentAtNode(elm[0]);\r\n            this._super();\r\n        },\r\n        setDataByField: function (fieldName, value) {\r\n            if (this.model.data == null) {\r\n                console.warn('model data is null');\r\n                return;\r\n            }\r\n\r\n            this.model.data[fieldName] = value;\r\n            if (this.component != null && this.component.setState != null)\r\n                this.component.setState(this.model.data);\r\n        },\r\n        setData: function (data) {\r\n            this.model.data = data;\r\n            if (this.component != null && this.component.setState != null)\r\n                this.component.setState({ data: data });\r\n        },\r\n        getData: function () {\r\n            if (this.component != null && this.component.setState != null)\r\n                return this.component.state.data;\r\n            else\r\n                return this.model.data;\r\n        },\r\n        getDataByField: function (fieldName) {\r\n            if (this.component != null && this.component.setState != null)\r\n                return this.component.state.data[fieldName];\r\n            else\r\n                return this.model.data[fieldName];\r\n\r\n        }\r\n    });\r\n    navigationPage = reactPage.extend({\r\n        init: function (id, model, template, containerselector) {\r\n            this._super(id, model, template, containerselector);\r\n            this.type = 3;//navigation page\r\n        },\r\n        display: function (url) {\r\n            this.destroy();\r\n\r\n            if (url != null && url.length>0)\r\n              this.model.props.url = url;\r\n\r\n            var pagename = (this.pageurl == null ? this.Id : this.pageurl);\r\n            console.log('display page %c ' + pagename, 'color:blue')\r\n            this.Load();\r\n        },\r\n        replace: function () {\r\n            this.display();\r\n        }\r\n\r\n    })\r\n    utils = eworkspace.utils;\r\n}\r\n\r\nfunction importAppConfig(config) {\r\n    AppConfig = config;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/global.js?");

/***/ }),

/***/ "./src/services/VesselOperation/VesselOrderService.js":
/*!************************************************************!*\
  !*** ./src/services/VesselOperation/VesselOrderService.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getWorkflowInfo\": () => (/* binding */ getWorkflowInfo),\n/* harmony export */   \"getStatusSummary\": () => (/* binding */ getStatusSummary)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\n\r\n\r\nfunction getWorkflowInfo(callback) {\r\n    var json = [\r\n        { type: 'image', point: [40, 10], size: [62, 62], url: \"img/workflow/wf_pending.png\", tip: { text: null }, content: { text: \"Schedule\", pos: [0, 0], from: 1 }, page: { url: \"VesselOrder.ViewModel.VesselSchehduleList\", Id: \"scheduleList\", params: [1] } },\r\n        { type: 'linearrow', starIndex: 0, endIndex: 2, content: { text: \"Add Order\", index: 0, pos: [-57, 30] } },\r\n        { type: 'image', point: [40, 160], size: [62, 62], url: \"img/workflow//wf_info.png\", tip: { text: null }, content: { text: [\"New Order\"], pos: [-10, 0], from: 2 }, page: { url: \"VesselOrder.ViewModel.VesselOrderList\", Id: \"newOrderList\", params: [1] } },\r\n        { type: 'linearrow', starIndex: 2, endIndex: 4, content: { text: \"Add B/L\", index: 0, pos: [-50, 30] } },\r\n        { type: 'image', point: [40, 310], size: [62, 62], url: \"img/workflow/wf_request.png\", tip: { text: null }, content: { text: [\"Order with B/L\"], pos: [-10, 0], from: 2 }, page: { url: \"VesselOrder.ViewModel.VesselOrderList\", Id: \"orderWithBLList\", params: [2] } },\r\n        { type: 'linearrow', starIndex: 4, endIndex: 6, content: { text: \"Add Jobs\", index: 0, pos: [-50, 30] } },\r\n        { type: 'image', point: [40, 464], size: [62, 62], url: \"img/workflow/wf_info.png\", tip: { text: null }, content: { text: [\"Planned Order\"], pos: [-10, 0], from: 2 }, page: { url: \"VesselOrder.ViewModel.VesselOrderList\", Id: 'plannedOrderList', params: [3] } },\r\n        { type: 'linearrow', starIndex: 6, endIndex: 8, content: { text: \"Execute\", index: 0, pos: [-50, 30] } },\r\n        { type: 'image', point: [40, 635], size: [62, 62], url: \"img/workflow/wf_checksheet.png\", tip: { text: null }, content: { text: \"Active Orders\", pos: [-10, 0], from: 2 }, page: { url: \"VesselOrder.ViewModel.VesselOrderList\", Id: 'activeOrderList', params: [4] } },\r\n        { type: 'linearrow', starIndex: 8, endIndex: 10, content: { text: \"Finish Jobs\", index: 0, pos: [15, -15] } },\r\n        { type: 'image', point: [202, 635], size: [62, 62], url: \"img/workflow/wf_approved.png\", tip: { text: null }, content: { text: \"Batch End Orders\", pos: [-10, 0], from: 2 }, page: { url: \"VesselOrder.ViewModel.VesselOrderList\", Id: 'batchEndOrderList', params: [5] } },\r\n        { type: 'linearrow', starIndex: 10, endIndex: 12, content: { text: \"Confirm BOL\", index: 0, pos: [-42, -50] } },\r\n        { type: 'image', point: [202, 464], size: [62, 62], url: \"img/workflow/wf_info.png\", tip: { text: null }, content: { text: \"Pending Print\", pos: [-10, 0], from: 3 }, page: { url: \"VesselOrder.ViewModel.ShipmentDocumentList\", Id: 'confirmBLList', params: [6] } },\r\n        { type: 'linearrow', starIndex: 12, endIndex: 14, content: { text: \"Depart\", index: 0, pos: [-40, -50] } },\r\n        { type: 'image', point: [202, 310], size: [62, 62], url: \"img/workflow/wfp_finish.png\", tip: { text: null }, content: { text: \"Complete\", pos: [-10, 0], from: 1 }, page: { url: \"VesselOrder.ViewModel.VesselSchehduleList\", Id: 'completeList', params: [8] } },\r\n        { type: 'image', point: [202, 10], size: [62, 62], url: \"img/workflow/wf_reject.png\", tip: { text: null }, content: { text: [\"Cancelled Schedule\"], pos: [0, 0], from: 1 }, page: { url: \"VesselOrder.ViewModel.VesselSchehduleList\", Id: \"rejectList\", params: [9] } },\r\n        { type: 'image', point: [202, 160], size: [62, 62], url: \"img/workflow/wf_reject.png\", tip: { text: null }, content: { text: [\"Cancelled Order\"], pos: [0, 0], from: 2 }, page: { url: \"VesselOrder.ViewModel.VesselOrderList\", Id: \"cancelledOrderList\", params: [99] } },\r\n        { type: 'linearrow', points: [[40, 191], [20, 191], [20, 495], [40, 495]], content: { text: \"Add Jobs\", index: 3, pos: [-40, -200] }, stroke: { color: 'blue', width: 4 } },\r\n        { type: 'linearrow', starIndex: 0, endIndex: 15, content: { text: \"Cancel\", index: 0, pos: [30, 5] }, stroke: { color: '#F9A73B', width: 4 } },\r\n        { type: 'linearrow', starIndex: 2, endIndex: 16, content: { text: \"Cancel\", index: 0, pos: [30, 5] }, stroke: { color: '#F9A73B', width: 4 } },\r\n        { type: 'linearrow', starIndex: 4, endIndex: 16, content: { text: \"Cancel\", index: 0, pos: [20, -80] }, stroke: { color: '#F9A73B', width: 4 } },\r\n        { type: 'linearrow', starIndex: 6, endIndex: 16, content: { text: \"Cancel\", index: 0, pos: [10, -30] }, stroke: { color: '#F9A73B', width: 4 } },\r\n    ];\r\n\r\n    VesselOrder.Services.getStatusSummary(json, callback);\r\n}\r\n\r\nfunction getStatusSummary(workflowUIData, callback) {\r\n    var apiOption = {\r\n        type: \"POST\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/CustomerOrder/TotalSummaryStep',\r\n        cache: false,\r\n        success: function (summary) {\r\n            var json = _global__WEBPACK_IMPORTED_MODULE_0__.utils.cloneModel(workflowUIData);\r\n\r\n            json.forEach(function (item) {\r\n\r\n                if (item.tip) {\r\n                    var flowStep = parseFloatValue(item.page.params[0]);\r\n                    var fromTable = parseFloatValue(item.content.from);\r\n\r\n                    var objTotalSummary = $.grep(summary, function (sitem) { return sitem.FlowStep === flowStep && sitem.FromTable === fromTable; })[0];\r\n\r\n                    if (objTotalSummary != null) {\r\n                        item.tip.text = objTotalSummary.TotalCount > 0 ? objTotalSummary.TotalCount.toString() : null;\r\n                    }\r\n                }\r\n\r\n                //var statusId = item.statusId != null ? item.statusId.toString() : '';\r\n                //if (summary[statusId] != null) {\r\n                //    item.tip = item.tip == null ? { text: null } : item.tip;\r\n                //    item.tip.text = summary[statusId].Total > 0 ? summary[statusId].Total.toString() : null;\r\n                //}\r\n\r\n                //if (item.page != null) {\r\n                //    item.page.displayParams = [];\r\n                //    item.page.displayParams.push(item.statusId);\r\n                //    item.page.params = [];\r\n                //    item.page.params.push(item.statusId); \r\n                //}\r\n\r\n            });\r\n\r\n\r\n            if ($.isFunction(callback)) callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            alert('Service Error(get workflow total summary):' + xhr.responseText);\r\n        },\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        processData: false\r\n    };\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n    //var json = utils.cloneModel(workflowUIData);\r\n    //if ($.isFunction(callback)) callback(json);\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/services/VesselOperation/VesselOrderService.js?");

/***/ }),

/***/ "./src/services/VesselOperation/services.js":
/*!**************************************************!*\
  !*** ./src/services/VesselOperation/services.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vesselscheduleservice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vesselscheduleservice */ \"./src/services/VesselOperation/vesselscheduleservice.js\");\n/* harmony import */ var _VesselOrderService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VesselOrderService */ \"./src/services/VesselOperation/VesselOrderService.js\");\n\r\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\r\n    return { getTankListLOV: _vesselscheduleservice__WEBPACK_IMPORTED_MODULE_0__.getTankListLOV,getVesselScheduleMasterData: _vesselscheduleservice__WEBPACK_IMPORTED_MODULE_0__.getVesselScheduleMasterData, getVesselScheduleList: _vesselscheduleservice__WEBPACK_IMPORTED_MODULE_0__.getVesselScheduleList, getWorkflowInfo: _VesselOrderService__WEBPACK_IMPORTED_MODULE_1__.getWorkflowInfo, getStatusSummary: _VesselOrderService__WEBPACK_IMPORTED_MODULE_1__.getStatusSummary };\r\n};\r\n\r\n  \n\n//# sourceURL=webpack://%5Bname%5D/./src/services/VesselOperation/services.js?");

/***/ }),

/***/ "./src/services/VesselOperation/vesselscheduleservice.js":
/*!***************************************************************!*\
  !*** ./src/services/VesselOperation/vesselscheduleservice.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getStartDay\": () => (/* binding */ getStartDay),\n/* harmony export */   \"getVesselScheduleList\": () => (/* binding */ getVesselScheduleList),\n/* harmony export */   \"getVesselScheduleDetail\": () => (/* binding */ getVesselScheduleDetail),\n/* harmony export */   \"getVesselScheduleMasterData\": () => (/* binding */ getVesselScheduleMasterData),\n/* harmony export */   \"getTankListLOV\": () => (/* binding */ getTankListLOV)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\n/* harmony import */ var _viewmodels_VesselOperation_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../viewmodels/VesselOperation/models */ \"./src/viewmodels/VesselOperation/models.js\");\n\r\n\r\nfunction getStartDay() {\r\n    var curr = new Date; // get current date\r\n    var first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week\r\n    var firstday = new Date(curr.setDate(first));\r\n    return new Date(firstday.getFullYear(), firstday.getMonth(), firstday.getDay())\r\n};\r\n\r\nfunction getVesselScheduleList(options, callback,failCallback) {\r\n    options = options == null ? { criterias: [], CurrentPageIndex: 0, PageSize: 10 } : options;\r\n    let parameter = {\r\n        Criterias: options.criterias == null ? [] : options.criterias,\r\n        CurrentPageIndex: options.page,\r\n        PageSize: options.pageSize\r\n    };\r\n\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.utils.setProcessbarhandler(true);\r\n    var apiOption = {\r\n        type: \"POST\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/shipment/list',\r\n        data: JSON.stringify(parameter),\r\n        global: false,\r\n        success: function (json) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.setProcessbarhandler(false);\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n            if ($.isFunction(failCallback))\r\n                failCallback();\r\n        },\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        processData: false\r\n    }\r\n\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n\r\n};\r\n\r\nfunction getVesselScheduleDetail(id, callback,failCallback) {\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl  + '/shipment/vesselschedule?id=' + id,\r\n        global: false,\r\n        success: function (json) {\r\n            var result = json;\r\n\r\n            json.BOLList.forEach(function (bol, index) {\r\n                bol.Index = index + 1;\r\n            });\r\n\r\n            if (json.PlannedArrivalTime)\r\n                result.PlannedArrivalTime = new Date(json.PlannedArrivalTime);\r\n            if (json.PlannedDepartureTime)\r\n                result.PlannedDepartureTime = new Date(json.PlannedDepartureTime);\r\n            if (json.ActualDepartureTime)\r\n                result.ActualDepartureTime = new Date(json.ActualDepartureTime);\r\n            if (json.ActualArrivalTime)\r\n                result.ActualArrivalTime = new Date(json.ActualArrivalTime);\r\n\r\n            if (json.Timesheet) {\r\n                if (json.Timesheet.FirstLineAshore)\r\n                    result.Timesheet.FirstLineAshore = new Date(json.Timesheet.FirstLineAshore);\r\n\r\n                if (json.Timesheet.VesselAllClear)\r\n                    result.Timesheet.VesselAllClear = new Date(result.Timesheet.VesselAllClear);\r\n\r\n                if (json.Timesheet.ArrvialAtPilotStation)\r\n                    result.Timesheet.ArrvialAtPilotStation = new Date(json.Timesheet.ArrvialAtPilotStation);\r\n                if (json.Timesheet.HealthImmCleared)\r\n                    result.Timesheet.HealthImmCleared = new Date(json.Timesheet.HealthImmCleared);\r\n                if (json.Timesheet.PilotBerthing)\r\n                    result.Timesheet.PilotBerthing = new Date(json.Timesheet.PilotBerthing);\r\n\r\n                if (json.Timesheet.FirstLineAshore)\r\n                    result.Timesheet.FirstLineAshore = new Date(json.Timesheet.FirstLineAshore);\r\n                if (json.Timesheet.MooringCompleted)\r\n                    result.Timesheet.MooringCompleted = new Date(json.Timesheet.MooringCompleted);\r\n                if (json.Timesheet.StartedDeballasting)\r\n                    result.Timesheet.StartedDeballasting = new Date(json.Timesheet.StartedDeballasting);\r\n\r\n                if (json.Timesheet.FinishedDeballasting)\r\n                    result.Timesheet.FinishedDeballasting = new Date(json.Timesheet.FinishedDeballasting);\r\n                if (json.Timesheet.StartedUllagingSampling)\r\n                    result.Timesheet.StartedUllagingSampling = new Date(json.Timesheet.StartedUllagingSampling);\r\n                if (json.Timesheet.FinishedUllagingSampling)\r\n                    result.Timesheet.FinishedUllagingSampling = new Date(json.Timesheet.FinishedUllagingSampling);\r\n                if (json.Timesheet.NoticeTendered)\r\n                    result.Timesheet.NoticeTendered = new Date(json.Timesheet.NoticeTendered);\r\n                if (json.Timesheet.NoticeAccepted)\r\n                    result.Timesheet.NoticeAccepted = new Date(json.Timesheet.NoticeAccepted);\r\n\r\n                if (json.Timesheet.StartedBallasting)\r\n                    result.Timesheet.StartedBallasting = new Date(json.Timesheet.StartedBallasting);\r\n                if (json.Timesheet.FinishedBallasting)\r\n                    result.Timesheet.FinishedBallasting = new Date(json.Timesheet.FinishedBallasting);\r\n                if (json.Timesheet.DocumentOnBoard)\r\n                    result.Timesheet.DocumentOnBoard = new Date(json.Timesheet.DocumentOnBoard);\r\n\r\n                if (json.Timesheet.PilotSailing)\r\n                    result.Timesheet.PilotSailing = new Date(json.Timesheet.PilotSailing);\r\n                if (json.Timesheet.StartUnmooring)\r\n                    result.Timesheet.StartUnmooring = new Date(json.Timesheet.StartUnmooring);\r\n                if (json.Timesheet.VesselAllClear)\r\n                    result.Timesheet.VesselAllClear = new Date(json.Timesheet.VesselAllClear);\r\n\r\n                if (json.Timesheet.BookingPilot)\r\n                    result.Timesheet.BookingPilot = new Date(json.Timesheet.BookingPilot);\r\n                if (json.Timesheet.BookingUnberthingPilot)\r\n                    result.Timesheet.BookingUnberthingPilot = new Date(json.Timesheet.BookingUnberthingPilot);\r\n            }\r\n\r\n            json.LastModifiedOn = _global__WEBPACK_IMPORTED_MODULE_0__.utils.toDateString(json.LastModifiedOn, \"dd MMM yyyy HH:mm:ss\");\r\n\r\n            if (json.PlannedArrivalTime && json.PlannedDepartureTime)\r\n                result.PlannedHours = Math.abs(new Date(json.PlannedDepartureTime) - new Date(json.PlannedArrivalTime)) / 36e5;\r\n            if (json.ActualArrivalTime && json.ActualDepartureTime)\r\n                result.AlongsideHours = Math.abs(new Date(json.ActualDepartureTime) - new Date(json.ActualArrivalTime)) / 36e5;\r\n\r\n            getVesselScheduleMasterData(function (masterData) {\r\n                result.JettyList = masterData.JettyList.map(function (jetty) {\r\n                    return { text: jetty.JettyName, value: jetty.Id };\r\n                });\r\n\r\n                result.VesselList = masterData.VesselList.map(function (vessel) {\r\n                    return { text: vessel.VesselName, value: vessel.Id, dwt: vessel.DWT };\r\n                });\r\n\r\n                result.ShipAgentList = masterData.ShipAgentList.map(function (agent) {\r\n                    return { text: agent.Name, value: agent.Id };\r\n                });\r\n\r\n                var customerList = masterData.CustomerList.map(function (customer) {\r\n                    return { text: customer.Name, value: customer.Id };\r\n                });\r\n\r\n                result.CustomerList = customerList;\r\n\r\n                json.BOLList.forEach(function (bol, index) {\r\n                    bol.CustomerList = customerList;\r\n                    bol.UOMList = _viewmodels_VesselOperation_models__WEBPACK_IMPORTED_MODULE_1__.UOMList.map(function (uom) {\r\n                        return { text: uom.Name, value: uom.Id };\r\n                    });\r\n                });\r\n\r\n                console.log(\"bol\", json.BOLList);\r\n\r\n                if ($.isFunction(callback))\r\n                    callback(result);\r\n            },\r\n                function () {\r\n                    _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n                    if ($.isFunction(callback))\r\n                        callback(result);\r\n                });\r\n        },\r\n        error: function (xhr) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n            if ($.isFunction(failCallback))\r\n                failCallback();\r\n        },\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        processData: false\r\n    });\r\n};\r\n\r\nfunction getVesselScheduleMasterData(callback, failCallback) {\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl  + '/MasterData/vesselschedule',\r\n        global: false,\r\n        success: function (json) {\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n            if ($.isFunction(failCallback))\r\n                failCallback();\r\n\r\n        },\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        processData: false\r\n    });\r\n};\r\n\r\nfunction getTankListLOV(callback, failCallback) {\r\n    var apiOption = {\r\n        type: \"GET\",\r\n        url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.serviceUrl + '/Tank/TanksLOV',\r\n        global: false,\r\n        success: function (json) {\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        },\r\n        error: function (xhr) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.utils.showProcessbar(false);\r\n            alert('Service Error(get tanks master data):' + xhr.responseText);\r\n            if ($.isFunction(failCallback))\r\n                failCallback();\r\n        },\r\n        dataType: 'json',\r\n        contentType: 'application/json',\r\n        processData: false\r\n    };\r\n    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.Services.callApi(apiOption);\r\n\r\n};\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/services/VesselOperation/vesselscheduleservice.js?");

/***/ }),

/***/ "./src/viewmodels/VesselOperation/models.js":
/*!**************************************************!*\
  !*** ./src/viewmodels/VesselOperation/models.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UOMList\": () => (/* binding */ UOMList),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\n﻿\r\n\r\nfunction getVesselScheduleHistoryModel() {\r\n    return {\r\n        title: \"Vessel Schedule History\",\r\n        buttons: [\r\n            { text: \"SEARCH\", name: \"fa-search\" },\r\n            { id: 'view', text: \"VIEW\", name: \"fa-pencil-alt\", page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName+'.VesselSchehduleDetails', Id: 'test' } },\r\n        ],\r\n        filters: [\r\n            {\r\n                width: '20%',\r\n                items: [\r\n                    { text: 'Departure', value: '4' },\r\n                    { text: 'Cancellation', value: '99' }\r\n                ]\r\n\r\n            }\r\n        ],\r\n        gridOptions: {\r\n            dataSource: {\r\n                data: [\r\n                ],\r\n                pageSize: 10,\r\n                serverPaging: true,\r\n                schema: {\r\n                    data: 'Items',\r\n                    total: 'RowCount'\r\n                }\r\n            },\r\n            height: 590,\r\n            selectable: true,\r\n            groupable: true,\r\n            filterable: false,\r\n            scrollable: true,\r\n            sortable: true,\r\n            pageable: true,\r\n            columns: [\r\n                { field: \"Id\", hidden: true },\r\n                { field: \"VesselScheduleNo\", title: 'Shipment No', width: '160px' },\r\n                { field: \"VesselName\", title: 'Vessel Name', width: '138px' },\r\n                { field: \"DWT\", title: 'DWT', width: '138px' },\r\n                {\r\n                    field: \"PlannedArrivalTime\", title: 'ETA', width: '160px',\r\n                    template: \"#= convertToDateString(PlannedArrivalTime, 'dd MMM yyyy') #\"\r\n                },\r\n                {\r\n                    field: \"PlannedDepartureTime\", title: 'ETD', width: '160px',\r\n                    template: \"#= (PlannedDepartureTime===null? '': convertToDateString(PlannedDepartureTime, 'dd MMM yyyy')) #\"\r\n                },\r\n                { field: \"StatusName\", title: 'Status', width: '100px' },\r\n                { field: \"JettyName\", title: 'Jetty No', width: '80px' }\r\n            ]\r\n        },\r\n        conditions: [\r\n            { field: \"VesselScheduleNo\", title: 'Shipment No', type: 'text', dataType: 'string' },\r\n            { field: \"VesselName\", title: 'Vessel Name', type: 'text', dataType: 'string' },\r\n            { field: \"PlannedArrivalTime\", title: 'ETA', type: 'text', dataType: 'datetime' },\r\n            { field: \"JettyName\", title: 'Jetty Name', type: 'text', dataType: 'string' }\r\n        ],\r\n        data: []\r\n    }\r\n}\r\n\r\nfunction getVesselScheduleDetailsModel() {\r\n    return {\r\n        toolBarItems: [\r\n            { id: 'new', template: \"<button><span class='fa fa-plus'></span><span data-i18n='NEW'>NEW</span></button>\" },\r\n            { id: 'save', template: \"<button><span class='fa fa-save'></span><span data-i18n='SAVE'>SAVE</span></button>\" },\r\n            { id: 'close', template: \"<button><span class='fa fa-times'></span><span data-i18n='CLOSE'>CLOSE</span></button>\" },\r\n            { id: 'delete', template: \"<button><span class='fa fa-trash'></span><span data-i18n='DELETE'>DELETE</span></button>\" }\r\n        ],\r\n        title: \"Vessel Schedule\",\r\n        headers: [\r\n            { title: 'Vessel Schedule No', field: \"VesselScheduleNo\" },\r\n            { title: 'Vessel Name', field: \"VesselName\" },\r\n            { title: 'Status', field: \"StatusName\" },\r\n            { title: \"Last Modify on\", field: \"LastModifiedOn\" },\r\n            { title: 'Owner', field: \"LastModifiedByName\" }\r\n        ],\r\n        data: null,\r\n        navigation: [\r\n            { id: 'schedule', text: 'Jetty Schedule', page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName + '.VesselSchehduleForm', Id: \"jettySchedule\" } },\r\n            { id: 'bol', text: 'BOL Instruction', page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName +'.BOLForm', Id: 'bol' }, dataSourceField: 'BOLList', visible: true },\r\n            { id: 'timesheet', text: 'Vessel Timesheet', page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName+'.TimeSheetForm', Id: 'timesheet' }, dataSourceField: \"Timesheet\" },\r\n            { id: 'docs', text: 'Documents', page: { url: _global__WEBPACK_IMPORTED_MODULE_0__.AppConfig.viewModelName+'.ShipmentDocumentExportForm', Id: 'docs' }, dataSourceField: \"DocList\", visible: false },\r\n\r\n        ],\r\n        content: []\r\n    }\r\n}\r\n\r\nfunction getVesselScheduleFormModel() {\r\n    return {\r\n        gridDataSourceField: \"OrderList\",\r\n        gridOptions: {\r\n            dataSource: {\r\n                data: [],\r\n                schema: {\r\n                    model: {\r\n                        id: \"Id\",\r\n                        fields: {\r\n                            CustomerOrderNo: { defaultValue: \"\", editable: false },\r\n                            Customer: { defaultValue: null },\r\n                            Product: { defaultValue: null },\r\n                            UOMEntity: { defaultValue: null },\r\n                            OrderTypeEntity: { defaultValue: null },\r\n                            IsBlending: { type: 'boolean' }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            },\r\n            height: 220,\r\n            editable: true,\r\n            groupable: false,\r\n            scrollable: true,\r\n            sortable: false,\r\n            pageable: false,\r\n            toolbar: [\"create\", \"save\", \"cancel\"],\r\n            columns: [\r\n                { field: \"CustomerOrderNo\", title: 'Order No.', width: '137px' },\r\n                { field: \"Customer\", title: 'Customer', template: \"#=Customer==null?'':Customer.Name#\", width: '180px' },\r\n                { field: \"Product\", title: 'Product', template: \"#=Product==null?'':Product.ProductName#\", width: '180px' },\r\n                { field: \"OrderQty\", title: 'Qty', width: '126px' },\r\n                { field: \"UOMEntity\", title: 'UOM', template: \"#=UOMEntity==null?'':UOMEntity.Name#\", width: '150px' },\r\n                { field: \"OrderTypeEntity\", title: 'Type', template: \"#=OrderTypeEntity==null?'':OrderTypeEntity.Name#\", width: '112px' },\r\n                { field: \"IsBlending\", title: 'Bld?', template: '<input type=\"checkbox\" #= IsBlending ? \\'checked=\"checked\"\\' : \"\" # class=\"chkbx k-checkbox\" />', width: '67px' },\r\n                { command: [\"destroy\"], title: \"\", width: '110px' }\r\n            ]\r\n        },\r\n        data: {\r\n            items: []\r\n        }\r\n    }\r\n}\r\n\r\nfunction getVesselScheduleHistoryBOLFormModel() {\r\n   return {\r\n        pageSize: 10,\r\n            itemTemplate: { Id: 'vesselBOLTemplate' },\r\n        itemEditTemplate: { Id: 'vesselBOLEditTemplate' },\r\n        selectable: false,\r\n            data: [],\r\n                schema: {\r\n            model: {\r\n                id: \"Id\",\r\n                    fields: {\r\n                    Index: { defaultValue: 0, type: \"number\" },\r\n                    BOLNo: { defaultValue: '', type: \"string\" },\r\n                    CustomerName: { defaultValue: '', type: \"string\" },\r\n                    Destination: { defaultValue: '', type: \"string\" },\r\n                    ProductName: { defaultValue: '', type: \"string\" },\r\n                    NominatedQTY: { defaultValue: 0, type: \"number\" },\r\n                    TotalQty: { defaultValue: 0, type: \"number\" },\r\n                    QtyActual: { defaultValue: 0, type: \"number\" },\r\n                    UOMName: { defaultValue: '', type: \"string\" },\r\n                    CustomPermitNo: { type: 'string' },\r\n                    Consignor: { type: 'string' },\r\n                    Consignee: { type: 'string' },\r\n                    Freight: { type: 'string' },\r\n                    CountryOfLoading: { type: \"string\" },\r\n                    CuttingPlanList: { nullable: true },\r\n\r\n                    Id: { defaultValue: '', type: \"string\" },\r\n                    VesselScheduleId: { defaultValue: '', type: \"string\" },\r\n                    CustomerId: { defaultValue: '', type: \"string\" },\r\n                    CustomerList: { defaultValue: '', type: \"string\" },\r\n                    DOCInstructor: { defaultValue: '', type: \"string\" },\r\n                    IsNewRecord: { defaultValue: 'true', type: \"string\" },\r\n                    LastModifiedBy: { defaultValue: '', type: \"string\" },\r\n                    LastModifiedByName: { defaultValue: '', type: \"string\" },\r\n                    LastModifiedOn: { defaultValue: '', type: \"string\" },\r\n                    SellingName: { defaultValue: '', type: \"string\" },\r\n                    Remark: { defaultValue: '', type: \"string\" },\r\n                    UOM: { defaultValue: '', type: \"string\" },\r\n                    UOMList: { nullable: true },\r\n                    UnitValue: { defaultValue: '', type: \"string\" },\r\n                    AllowEdit: { defaultValue: 'inline-block', type: \"string\" }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet UOMList =  [\r\n    { Id: 1, Name: 'M³@15℃' },\r\n    { Id: 2, Name: 'M³@Obs.Temp' },\r\n    { Id: 3, Name: 'Litres@15℃' },\r\n    { Id: 4, Name: 'Litres@Obs.Temp' },\r\n    { Id: 5, Name: 'MT' },\r\n    { Id: 6, Name: 'Long Tons' },\r\n    { Id: 7, Name: 'US BBLs@60℉' }\r\n]\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    getVesselScheduleHistoryModel,\r\n    getVesselScheduleDetailsModel,\r\n    getVesselScheduleFormModel,\r\n    getVesselScheduleHistoryBOLFormModel\r\n});\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/viewmodels/VesselOperation/models.js?");

/***/ }),

/***/ "./src/viewmodels/VesselOperation/vesselscheduleVM.js":
/*!************************************************************!*\
  !*** ./src/viewmodels/VesselOperation/vesselscheduleVM.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VesselSchehduleHistoryList\": () => (/* binding */ VesselSchehduleHistoryList),\n/* harmony export */   \"VesselSchehduleDetails\": () => (/* binding */ VesselSchehduleDetails),\n/* harmony export */   \"VesselSchehduleForm\": () => (/* binding */ VesselSchehduleForm),\n/* harmony export */   \"BOLForm\": () => (/* binding */ BOLForm),\n/* harmony export */   \"TimeSheetForm\": () => (/* binding */ TimeSheetForm),\n/* harmony export */   \"ShipmentDocumentExportForm\": () => (/* binding */ ShipmentDocumentExportForm)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../global */ \"./src/global.js\");\n/* harmony import */ var _services_VesselOperation_vesselscheduleservice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/VesselOperation/vesselscheduleservice */ \"./src/services/VesselOperation/vesselscheduleservice.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models */ \"./src/viewmodels/VesselOperation/models.js\");\n/* harmony import */ var _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/CommonGridEditor */ \"./src/common/CommonGridEditor.js\");\n\r\n \r\n\r\n\r\n\r\nfunction VesselSchehduleHistoryList(id, selector) {\r\n    var model = _models__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getVesselScheduleHistoryModel();\r\n    var list = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.ListPage(id, model, selector);\r\n    //set filter default value\r\n    list.addfilter = function (value) {\r\n        list.model.filterConditions = [];\r\n        list.addFilterCondition(\"IsDeleted\", \"==\", value == \"99\", \"bool\", null);\r\n        if (value === \"0\")\r\n            list.addFilterCondition(\"StatusId\", \"==\", 4, \"int\", \"And\");\r\n        else\r\n            list.addFilterCondition(\"StatusId\", \"==\", value, \"int\", \"And\");\r\n    };\r\n\r\n    list.setInitFilterHandler(function () {\r\n        list.addfilter(\"0\");\r\n    });\r\n\r\n    var getVesselSchedules = function (option, callback,failcallback) {\r\n        _services_VesselOperation_vesselscheduleservice__WEBPACK_IMPORTED_MODULE_1__.getVesselScheduleList(option, callback, failcallback);\r\n    };\r\n\r\n    list.setLoadDataHandler(getVesselSchedules);\r\n\r\n    list.setEventHandler(function () {\r\n        var gridSelect = function (e) {\r\n            var selectedRows = this.select();\r\n            var dataItem = this.dataItem(selectedRows[0]);\r\n            list.setButtonVisible(4, dataItem.Id != 1);\r\n        };\r\n        var grid = list._getGrid();\r\n        grid.bind(\"change\", gridSelect);\r\n\r\n    });\r\n\r\n    list.onButtonClickById('view', function (page) {\r\n        if (page == null) {\r\n            console.error(\"fails to load vessel schedule detail page\");\r\n            return;\r\n        }\r\n\r\n        //page.previous = list;\r\n        var data = list.getSelectedRow();\r\n\r\n        if (data != null) {\r\n            //page.display(data.Id);\r\n            page.navigate('id='+data.Id)\r\n        }\r\n        else {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.warning('Please select a record');\r\n            list.show();\r\n        }\r\n\r\n    });\r\n\r\n    list.onFilter(0, function (e) {\r\n        var value = this.value();\r\n\r\n        list.addfilter(value);\r\n        list.readGridData();\r\n    });\r\n\r\n    return list;\r\n}\r\n\r\nfunction VesselSchehduleDetails(id, selector) {\r\n    var model = _models__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getVesselScheduleDetailsModel();\r\n    var details = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.WorkflowPage(id, model, selector);\r\n\r\n    details.setLoadDataHandler(_services_VesselOperation_vesselscheduleservice__WEBPACK_IMPORTED_MODULE_1__.getVesselScheduleDetail);\r\n    details.setLoadCompletedHandler(function (data) {\r\n        var allowEdit = !data.IsShipDocCreated;\r\n        details.setButtonVisibleById(\"new\", allowEdit);\r\n        details.setButtonVisibleById(\"save\", allowEdit);\r\n        details.setButtonVisibleById(\"delete\", allowEdit);\r\n        details.toggleNavigationbar(1, data.OrderList.length > 0);\r\n        details._setNavigationMenuVisible(details.model.navigation.length - 1, data.StatusId == 4);\r\n    });\r\n\r\n    details.onToolBarItemClickById('new', function () {\r\n        details.display(\"\");\r\n    });\r\n\r\n    details.onToolBarItemClickById('save', function () {\r\n        var pageSchedule = details.getNavigationPageById('schedule');\r\n        var pageTimesheet = details.getNavigationPageById('timesheet');\r\n        var pagebol = details.getNavigationPageById('bol');\r\n\r\n        pageSchedule.save(function (dataJettySchedule) {\r\n            var json = dataJettySchedule;\r\n            pagebol.save(function (bolData) {\r\n                if (bolData.length > 0)\r\n                    json.BOLList = bolData;\r\n\r\n                pageTimesheet.save(json.Id, function (timesheetData) {\r\n                    json.Timesheet = timesheetData;\r\n                    VesselOrder.Services.saveVesselScheduleShipmentDetail(json, function (data) {\r\n                        details.display(data.Id);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    details.onToolBarItemClickById('close', function () {\r\n        //child page display\r\n        details.parent.navigate();\r\n        //details.previous.display();\r\n    });\r\n\r\n    details.onToolBarItemClickById('delete', function () {\r\n        var dialog = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.ConfirmationDialog();\r\n        dialog.show(\"Delete Record\", \"Are you sure to delete the record?\",\r\n            function () {\r\n                var pageSchedule = details.getNavigationPageById('schedule');\r\n                var id = pageSchedule.model.data.Id;\r\n                VesselOrder.Services.deleteVesselSchedule(id,\r\n                    function () {\r\n                        details.parent.navigate();\r\n                       // details.previous.display();\r\n                    });\r\n            });\r\n    });\r\n\r\n    return details;\r\n};\r\n\r\nfunction VesselSchehduleForm(id, selector) {\r\n    var model = _models__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getVesselScheduleFormModel();\r\n    var template = { Id: 'vesselScheduleForm', url: 'src/view/vesselorder.html' };\r\n    var form = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.List(id, model, selector, template);\r\n\r\n    form.setLoadCompletedHandler(function (data) {\r\n        form.setGridMode(data.AllowEdit);\r\n    });\r\n\r\n    form.setEventHandler(function () {\r\n        form.setColumnEditor(\"Customer\", _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__.CommonGridEditors.CustomerEditor);\r\n        form.setColumnEditor(\"Product\", _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__.CommonGridEditors.ProductEditor);\r\n        form.setColumnEditor(\"UOMEntity\", _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__.CommonGridEditors.UOMEditor);\r\n        form.setColumnEditor(\"OrderTypeEntity\", _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__.CommonGridEditors.OrderTypeEditor);\r\n        form.setColumnEditor(\"OrderQty\", _common_CommonGridEditor__WEBPACK_IMPORTED_MODULE_3__.CommonGridEditors.Decimal3Editor);\r\n\r\n        var grid = form._getGrid();\r\n        $('#' + form.Id).find(\".grid .k-grid-content\").on(\"change\",\r\n            \"input.chkbx\",\r\n            function (e) {\r\n                var grid = form._getGrid();\r\n                dataItem = grid.dataItem($(e.target).closest(\"tr\"));\r\n                dataItem.set(\"IsBlending\", this.checked);\r\n            });\r\n\r\n        grid.bind('saveChanges',\r\n            function (e) {\r\n                var data = e.sender.dataSource.data();\r\n                var sbMsg = new StringBuilder();\r\n                var msgArray = new Array();\r\n                if (data && data.length > 0) {\r\n                    data.forEach(function (item, index) {\r\n                        if (item.Customer == null || item.Customer.Id == null) {\r\n                            msgArray.pushSet(\"Customer is required.\");\r\n                        }\r\n                        if (item.Product == null || item.Product.Id == null) {\r\n                            msgArray.pushSet(\"Product is required.\");\r\n                        }\r\n                        if (item.OrderQty == null) {\r\n                            msgArray.pushSet(\"Qty is required.\");\r\n                        }\r\n                        if (item.UOMEntity == null || item.UOMEntity.Id == null) {\r\n                            msgArray.pushSet(\"Uom is required.\");\r\n                        }\r\n                        if (item.OrderTypeEntity == null || item.OrderTypeEntity.Id == null) {\r\n                            msgArray.pushSet(\"Type is required.\");\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                if (msgArray.length > 0) {\r\n                    for (var i = 0; i < msgArray.length; i++) {\r\n                        sbMsg.Append(msgArray[i]);\r\n                        sbMsg.Append(\"<br/>\");\r\n                    }\r\n                }\r\n                var msgResult = sbMsg.ToString();\r\n                if (msgResult.length > 0) {\r\n                    _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.error(msgResult);\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                form.setDataByField('Items', data);\r\n            });\r\n\r\n        grid.bind('remove',\r\n            function (e) {\r\n                VesselOrder.Services.deleteVesselScheduleCustomerOrderDetail(e.model.Id);\r\n            });\r\n\r\n        $('#' + form.Id).find(\".vesselDDL\").on(\"change\", function (e) {\r\n            var value = this.value;\r\n            var vessel = $.grep(form.model.data.VesselList, function (e) { return e.value === value; });\r\n            if (vessel.length > 0) {\r\n                form.setDataByField('DWT', vessel[0].dwt);\r\n            }\r\n        });\r\n\r\n        form.ValidateInit('div.form.vesselscheduleform');\r\n    });\r\n\r\n    form.save = function (callback) {\r\n        if (form.validator.validate()) {\r\n\r\n            var data = form.getData();\r\n            var grid = form._getGrid();\r\n            var orderData = grid.dataSource.data();\r\n\r\n            var sbMsg = new StringBuilder();\r\n            var msgArray = new Array();\r\n\r\n            if (data.VesselId == null) {\r\n                msgArray.pushSet(\"Vessel is required.\");\r\n            }\r\n\r\n            if (data.JettyId == null) {\r\n                msgArray.pushSet(\"Jetty is required.\");\r\n            }\r\n\r\n            var format = \"yyyy-MM-ddTHH:mm:ssZ\";\r\n            var plannedArrivalTime = data.PlannedArrivalTime;\r\n            var plannedDepartureTime = data.PlannedDepartureTime;\r\n            if (plannedDepartureTime != null) {\r\n                var from = kendo.parseDate(plannedArrivalTime, format);\r\n                var to = kendo.parseDate(plannedDepartureTime, format);\r\n                if (from > to) {\r\n                    msgArray.pushSet(\"Planned Departure is later than Planned Arrival.\");\r\n                }\r\n            }\r\n\r\n            var actualArrivalTime = data.ActualArrivalTime;\r\n            var actualDepartureTime = data.ActualDepartureTime;\r\n            if (actualArrivalTime != null && actualDepartureTime != null) {\r\n                var from = kendo.parseDate(actualArrivalTime, format);\r\n                var to = kendo.parseDate(actualDepartureTime, format);\r\n                if (from > to) {\r\n                    msgArray.pushSet(\"Vessel All Clear is later than 1st Line Ashore.\");\r\n                }\r\n            }\r\n\r\n            if (msgArray.length > 0) {\r\n                for (var i = 0; i < msgArray.length; i++) {\r\n                    sbMsg.Append(msgArray[i]);\r\n                    sbMsg.Append(\"<br/>\");\r\n                }\r\n            }\r\n            var msgResult = sbMsg.ToString();\r\n            if (msgResult.length > 0) {\r\n                _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.error(msgResult);\r\n                return;\r\n            }\r\n\r\n\r\n            var orderList = [];\r\n            if (orderData && orderData.length > 0)\r\n                orderList = orderData.map(function (item) {\r\n                    return {\r\n                        Id: item.Id,\r\n                        CustomerOrderNo: item.CustomerOrderNo,\r\n                        CustomerId: item.Customer.Id,\r\n                        CustomerCode: item.Customer.Code,\r\n                        CustomerName: item.Customer.Name,\r\n\r\n                        ProductId: item.Product.Id,\r\n                        ProductCode: item.Product.ProductCode,\r\n                        ProductName: item.Product.ProductName,\r\n\r\n                        OrderType: item.OrderTypeEntity.Id,\r\n                        OrderTypeName: item.OrderTypeEntity.Name,\r\n                        IsBlending: item.IsBlending,\r\n\r\n                        UOM: item.UOMEntity.Id,\r\n                        UOMName: item.UOMEntity.Name,\r\n                        UOMDisplayName: item.UOMEntity.Name,\r\n\r\n                        OperationType: item.OrderTypeEntity.Id,\r\n                        OrderQty: item.OrderQty,\r\n                        Remark: item.Remark,\r\n\r\n                        VesselScheduleNo: item.VesselScheduleNo,\r\n                        VesselScheduleId: event.Id,\r\n\r\n                        Status: 1,\r\n                        StatusName: \"COOpen\"\r\n                    };\r\n                });\r\n\r\n            var json = _global__WEBPACK_IMPORTED_MODULE_0__.utils.cloneModel(data);\r\n            json.OrderList = orderList;\r\n            delete json.JettyList;\r\n            delete json.VesselList;\r\n            delete json.ShipAgentList;\r\n            delete json.CustomerList;\r\n            delete json.PlannedHours;\r\n\r\n            if ($.isFunction(callback))\r\n                callback(json);\r\n        }\r\n        else {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.error('Please enter the required fields');\r\n            return;\r\n        }\r\n    };\r\n\r\n    form.model.onInputRemark = function (e) {\r\n        $('#' + form.Id).find('.k-counter-container .k-counter-value').html($(e.sender.element).val().length);\r\n    };\r\n\r\n    form.model.onActualDateChanged = function (e) {\r\n        var data = form.getData();\r\n        if (data.PlannedArrivalTime && data.PlannedDepartureTime)\r\n            form.setDataByField('PlannedHours', Math.abs(new Date(data.PlannedDepartureTime) - new Date(data.PlannedArrivalTime)) / 36e5);\r\n        if (data.ActualArrivalTime && data.ActualDepartureTime)\r\n            form.setDataByField('AlongsideHours', Math.abs(new Date(data.ActualDepartureTime) - new Date(data.ActualArrivalTime)) / 36e5);\r\n\r\n        var timesheet;\r\n        var value = e.sender.value();\r\n        if (e.sender.element[0].name === \"FirstLineAshore\") {\r\n            timesheet = form.parent.getNavigationPageById('timesheet');\r\n            timesheet.setDataByField(\"FirstLineAshore\", value);\r\n        }\r\n        if (e.sender.element[0].name === \"VesselAllClear\") {\r\n            timesheet = form.parent.getNavigationPageById('timesheet');\r\n            timesheet.setDataByField(\"VesselAllClear\", value);\r\n        }\r\n    };\r\n\r\n\r\n    form.model.onSelectVesselLov = function () {\r\n        var dialog = new VesselOrder.ViewModel.VesselSchduleVesselLov('select', function (selectedItem) {\r\n            var jsonSeltItem = _global__WEBPACK_IMPORTED_MODULE_0__.utils.cloneModel(selectedItem);\r\n            if (jsonSeltItem) {\r\n                form.setDataByField('VesselId', jsonSeltItem.Id);\r\n                form.setDataByField('VesselName', jsonSeltItem.VesselName);\r\n                form.setDataByField('VesselFlag', jsonSeltItem.VesselFlag);\r\n                form.setDataByField('DWT', jsonSeltItem.DWT);\r\n            }\r\n        });\r\n        dialog.display();\r\n    };\r\n\r\n    form.model.onSelectShipAgentLov = function () {\r\n        var dialog = new VesselOrder.ViewModel.ShipAgentLov('select', function (selectedItem) {\r\n            var jsonSeltItem = _global__WEBPACK_IMPORTED_MODULE_0__.utils.cloneModel(selectedItem);\r\n            if (jsonSeltItem) {\r\n                form.setDataByField('ShipAgentId', jsonSeltItem.Id);\r\n                form.setDataByField('ShipAgentCode', jsonSeltItem.Code);\r\n                form.setDataByField('ShipAgentName', jsonSeltItem.Name);\r\n            }\r\n        });\r\n        dialog.display();\r\n    };\r\n\r\n    return form;\r\n};\r\n\r\nfunction BOLForm (id, selector) {\r\n\r\n    var template = { Id: 'vesselBOL', url: 'src/view/vesselorder.html' };\r\n    var model = _models__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getVesselScheduleHistoryBOLFormModel();\r\n    var details = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.ListView(id, model, selector, template);\r\n\r\n    details.setEventHandler(function () {\r\n        $(document.body).on('click', '#' + details.Id + ' .k-add-button', function (e) {\r\n            var listView = details._getListView();\r\n            listView.add();\r\n            e.preventDefault();\r\n        });\r\n\r\n        $(document.body).on('click', '#' + details.Id + ' .bolCustomerLov', function (e) {\r\n            var dialog = new VesselOrder.ViewModel.CustomerLov('select', function (selectedItem) {\r\n                var jsonSeltItem = _global__WEBPACK_IMPORTED_MODULE_0__.utils.cloneModel(selectedItem);\r\n                if (jsonSeltItem) {\r\n\r\n                    var li = $(e.currentTarget).parent();\r\n                    var listView = details._getListView();\r\n                    var dataItem = listView.dataItem(li);\r\n\r\n                    dataItem.CustomerId = jsonSeltItem.Id;\r\n                    dataItem.CustomerCode = jsonSeltItem.Code;\r\n                    dataItem.CustomerName = jsonSeltItem.Name;\r\n                    listView.refresh();\r\n                    listView.edit(listView.content.children().first())\r\n                }\r\n            });\r\n            dialog.display();\r\n        });\r\n\r\n        $(document.body).on('click', '#' + details.Id + ' .k-copy-button', function (e) {\r\n            var li = $(e.currentTarget).parent();\r\n            var listView = details._getListView();\r\n            var dataItem = listView.dataItem(li);\r\n            console.log(dataItem);\r\n            var index = listView.dataSource.total() + 1;;\r\n\r\n            if (dataItem) {\r\n                listView.dataSource.add({\r\n                    Id: \"\",\r\n                    VesselScheduleId: \"\",\r\n                    Index: index,\r\n                    BOLNo: \"\",\r\n                    Consignee: dataItem.Consignee,\r\n                    Consignor: dataItem.Consignor,\r\n                    CountryOfLoading: dataItem.CountryOfLoading,\r\n                    CustomPermitNo: dataItem.CustomPermitNo,\r\n                    CustomerId: dataItem.CustomerId,\r\n                    CustomerList: dataItem.CustomerList,\r\n                    CustomerName: dataItem.CustomerName,\r\n                    Destination: dataItem.Destination,\r\n                    DOCInstructor: dataItem.DOCInstructor,\r\n                    Freight: dataItem.Freight,\r\n                    IsNewRecord: true,\r\n                    LastModifiedBy: \"\",\r\n                    LastModifiedByName: null,\r\n                    LastModifiedOn: null,\r\n                    NominatedQTY: dataItem.NominatedQTY,\r\n                    CuttingPlanList: dataItem.CuttingPlanList,\r\n                    SellingName: dataItem.SellingName,\r\n                    Remark: dataItem.Remark,\r\n                    UOM: dataItem.UOM,\r\n                    UOMName: dataItem.UOMName,\r\n                    UOMList: dataItem.UOMList,\r\n                    UnitValue: dataItem.UnitValue,\r\n                    AllowEdit: \"inline-block\"\r\n                });\r\n            }\r\n            e.preventDefault();\r\n        });\r\n\r\n        $(document.body).on('click', '#' + details.Id + ' button.add',\r\n            function (e) {\r\n\r\n                var pop_window = new VesselOrder.ViewModel.OrderLov('select-orders', details.parent.model.data.Id, function (selectedItems) {\r\n                    //var li = $(e.currentTarget).parent();\r\n                    //var listView = details._getListView();\r\n                    //var dataItem = listView.dataItem(li);\r\n                    var elm = $('#' + details.Id).find('.grid');\r\n                    var grid = elm.data(\"kendoGrid\");\r\n\r\n                    selectedItems.forEach(function (order, index) {\r\n                        var data = {\r\n                            CustomerOrderId: order.Id,\r\n                            CustomerOrderNo: order.CustomerOrderNo,\r\n                            ProductId: order.ProductId,\r\n                            ProductCode: order.ProductCode,\r\n                            ProductName: order.ProductName,\r\n                            QtyTarget: order.OrderQty,\r\n                            UOM: order.UOM,\r\n                            UOMName: order.UOMName,\r\n                            BlendingFlag: order.BlendingFlag\r\n                        };\r\n                        grid.dataSource.add(data);\r\n                        //dataItem.CuttingPlanList.push(data);\r\n                        //grid.dataSource.data(dataItem.CuttingPlanList);\r\n                    });\r\n                });\r\n                pop_window.display();\r\n            });\r\n\r\n        $(document.body).on('click', '#' + details.Id + ' button.save', function (e) {\r\n\r\n            var li = $(e.currentTarget).parent();\r\n            var listView = details._getListView();\r\n            var dataItem = listView.dataItem(li);\r\n            //var grid = form._getGrid();\r\n            var grid = $(\"#\" + details.Id).find('.grid').data(\"kendoGrid\");\r\n            grid.saveChanges();\r\n            var gridList = _global__WEBPACK_IMPORTED_MODULE_0__.utils.cloneModel(grid.dataSource.data());\r\n\r\n            if (gridList.length == 0) {\r\n                _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.info('Please Add cutting plan first');\r\n                return;\r\n            } else {\r\n                dataItem.CuttingPlanList = gridList;\r\n            }\r\n\r\n            //TLSVP.info('Save changes success');\r\n            //return;\r\n        });\r\n\r\n        details.bindEvent(\"dataBinding\", function (e) {\r\n            console.log('data bind', e);\r\n            if (e.action === \"add\") {\r\n\r\n                var listView = details._getListView();\r\n                var items = listView.dataItems();\r\n                var indexs = items.map(function (item) { return item.Index == null ? 0 : item.Index; });\r\n                var curIndex = Math.max.apply(Math, indexs);\r\n                e.items[0].Index = curIndex + 1;\r\n                e.items[0].UOMList = VesselOrder.Model.UomList.map(function (uom) {\r\n                    return { text: uom.Name, value: uom.Id };\r\n                });\r\n                e.items[0].CustomerList = details.parent.model.data.CustomerList;\r\n            }\r\n            if (e.action === \"sync\") {\r\n                e.items.forEach(function (bol, index) {\r\n                    var uom = $.grep(bol.UOMList, function (e) { return e.value === bol.UOM; });\r\n                    if (uom.length > 0) {\r\n                        bol.UOMName = uom[0].text;\r\n                        bol.UOMDisplayName = uom[0].text;\r\n                    }\r\n                });\r\n            }\r\n\r\n            var listView = details._getListView();\r\n            var items = listView.dataItems();\r\n            console.log('items', items);\r\n        });\r\n\r\n        details.bindEvent(\"edit\",\r\n            function (e) {\r\n                var gridElm = $('#' + details.Id).find('.grid');\r\n                if (gridElm.length == 0) {\r\n                    details.display();\r\n                    var listView = details._getListView();\r\n                    listView.edit(listView.content.children().eq(e.model.Index - 1));\r\n                } else {\r\n                    var grid = gridElm.data(\"kendoGrid\");\r\n                    grid.bind(\"remove\", function (e) {\r\n                        VesselOrder.Services.deleteBOLCuttingPlan(e.model.Id);\r\n                    });\r\n                }\r\n            });\r\n\r\n        details.bindEvent(\"remove\",\r\n            function (e) {\r\n                VesselOrder.Services.deleteVesselScheduleBOLDetail(e.model.Id, function (item) {\r\n                    var listView = details._getListView();\r\n                    var select = listView.select();\r\n                    if (select) {\r\n                        var index = select.index();\r\n                        var dataItem = listView.dataSource.view()[index];\r\n                        listView.dataSource.remove(dataItem);\r\n                    }\r\n                });\r\n            });\r\n    });\r\n\r\n    details.save = function (callback) {\r\n        var listView = details._getListView();\r\n        var data = [];\r\n        if (listView) {\r\n            data = listView.dataSource.data();\r\n        }\r\n        if (data != null && data.length > 0) {\r\n\r\n            var sbMsg = new StringBuilder();\r\n            var msgArray = new Array();\r\n\r\n\r\n\r\n            data.forEach(function (bol, index) {\r\n                var total = bol.TotalQty;\r\n                var target = 0;\r\n                if (bol.CuttingPlanList.length == 0)\r\n                    msgArray.pushSet(\"Please add cutting plan\");\r\n\r\n                bol.CuttingPlanList.forEach(function (plan, inch) {\r\n                    target = target + plan.QtyTarget;\r\n                });\r\n                target = eval(target);\r\n                if (target > total)\r\n                    msgArray.pushSet(\"The BOL(\" + (index + 1) + \")sum of target qty is greater than total qty\");\r\n            });\r\n\r\n            if (msgArray.length > 0) {\r\n                for (var i = 0; i < msgArray.length; i++) {\r\n                    sbMsg.Append(msgArray[i]);\r\n                    sbMsg.Append(\"<br/>\");\r\n                }\r\n            }\r\n            var msgResult = sbMsg.ToString();\r\n            if (msgResult.length > 0) {\r\n                _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.error(msgResult);\r\n                return;\r\n            }\r\n\r\n            if ($.isFunction(callback));\r\n            callback(data);\r\n\r\n        } else {\r\n            if ($.isFunction(callback));\r\n            callback(data);\r\n        }\r\n    };\r\n\r\n    return details;\r\n};\r\n\r\nfunction TimeSheetForm(id, selector) {\r\n    var model = { data: null };\r\n    var template = { Id: 'timesheetForm', url: 'src/view/vesselorder.html' };\r\n    var form = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.Form(id, model, template, selector);\r\n    form.save = function (vesselScheduleId, callback) {\r\n        var data = form.getData();\r\n        if (data.VesselSchduleId == null)\r\n            data.VesselScheduleId = vesselScheduleId;\r\n\r\n        if ($.isFunction(callback))\r\n            callback(data);\r\n    };\r\n\r\n    form.model.onActualDateChanged = function (e) {\r\n        var data = form.getData();\r\n\r\n        var schedule;\r\n        var value = e.sender.value();\r\n        if (e.sender.element[0].name === \"FirstLineAshore\") {\r\n            schedule = form.parent.getNavigationPageById('schedule');\r\n            schedule.setDataByField(\"ActualArrivalTime\", value);\r\n        }\r\n\r\n        if (e.sender.element[0].name === \"VesselAllClear\") {\r\n            schedule = form.parent.getNavigationPageById('schedule');\r\n            schedule.setDataByField(\"ActualDepartureTime\", value);\r\n        }\r\n    };\r\n\r\n    return form;\r\n};\r\n\r\nfunction ShipmentDocumentExportForm(id, selector) {\r\n    var model = {\r\n        title: \"Documents:\",\r\n        gridOptions: {\r\n            dataSource: {\r\n                data: [],\r\n                group: {\r\n                    field: \"Title\",\r\n                    dir: \"asc\",\r\n                },\r\n            },\r\n            height: '400',\r\n            groupable: false,\r\n            scrollable: true,\r\n            selectable: {\r\n                mode: \"multiple, row\"\r\n            },\r\n            pageable: false,\r\n            columns: [\r\n                { field: \"DocName\", title: 'Name' },\r\n                { field: \"CustomerName\", title: 'Customer' }\r\n                //{ command: [\"destroy\"], title: \"\", width: '150px' }\r\n            ]\r\n        },\r\n        data: []\r\n    }\r\n\r\n    var template = { Id: 'shipmentDocExport', url: 'src/view/shipmentdoc.html' };\r\n    var form = new _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.framework.List(id, model, selector, template);\r\n    form.model.onExport = function () {\r\n\r\n        var grid = form._getGrid();\r\n        var rows = grid.select();\r\n\r\n        var item = grid.dataItem(rows);\r\n        var docName = item.DocName;\r\n        console.info(docName);\r\n\r\n\r\n        var reportName = \"\";\r\n        if (docName === \"Bill of Lading\")\r\n            reportName = \"SL_BillOfLading\";\r\n        if (docName === \"Certificate of Quantity\")\r\n            reportName = \"SL_CertificateOfQuantity\";\r\n\r\n        if (reportName.length === 0) {\r\n            _global__WEBPACK_IMPORTED_MODULE_0__.eworkspace.ViewModel.info(\"Not implementation yet, Export only works with Bill of Lading and Certificate of Quantity\");\r\n            return;\r\n        }\r\n        var param = {\r\n            BillId: item.BOLId,\r\n            ReportName: reportName\r\n        };\r\n\r\n        VesselOrder.Services.exportReport(param,\r\n            function (fileUrl) {\r\n                VesselOrder.Services.downloadLocalDocument(fileUrl,\r\n                    function () {\r\n                        console.log('Exported Successfully');\r\n                    });\r\n            });\r\n    }\r\n    return form;\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/viewmodels/VesselOperation/vesselscheduleVM.js?");

/***/ }),

/***/ "./src/viewmodels/VesselOperation/viewmodels.js":
/*!******************************************************!*\
  !*** ./src/viewmodels/VesselOperation/viewmodels.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vesselscheduleVM */ \"./src/viewmodels/VesselOperation/vesselscheduleVM.js\");\n\r\n\r\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\r\n    return {\r\n        VesselSchehduleHistoryList: _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__.VesselSchehduleHistoryList, VesselSchehduleDetails: _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__.VesselSchehduleDetails,\r\n        VesselSchehduleForm: _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__.VesselSchehduleForm, BOLForm: _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__.BOLForm, TimeSheetForm: _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__.TimeSheetForm, ShipmentDocumentExportForm: _vesselscheduleVM__WEBPACK_IMPORTED_MODULE_0__.ShipmentDocumentExportForm\r\n    };\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/viewmodels/VesselOperation/viewmodels.js?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.js");
/******/ 	VesselOrder = __webpack_exports__;
/******/ 	
/******/ })()
;